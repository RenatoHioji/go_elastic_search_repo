// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/RenatoHioji/go_elastic_search_repo/internal/app"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/config"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/handlers"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/repository"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/service"
)

// Injectors from wire.go:

func InitializeApp() (*app.App, error) {
	configConfig, err := config.LoadConfig()
	if err != nil {
		return nil, err
	}
	db, err := config.InitDB(configConfig)
	if err != nil {
		return nil, err
	}
	productRepository := repository.NewProductRepository(db)
	productService := service.NewProductService(productRepository)
	productHandler := handlers.NewProductHandler(productService)
	userRepository := repository.NewUserRepository(db)
	userService := service.NewUserService(userRepository)
	userHandler := handlers.NewUserHandler(userService)
	appApp := &app.App{
		ProductHandler: productHandler,
		UserHandler:    userHandler,
		Config:         configConfig,
	}
	return appApp, nil
}
