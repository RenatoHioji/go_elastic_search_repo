// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/RenatoHioji/go_elastic_search_repo/internal/app"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/config"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/product"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/search"
	"github.com/RenatoHioji/go_elastic_search_repo/internal/user"
)

// Injectors from wire.go:

func InitializeApp() (*app.App, error) {
	configConfig, err := config.LoadConfig()
	if err != nil {
		return nil, err
	}
	db, err := config.InitDB(configConfig)
	if err != nil {
		return nil, err
	}
	productRepository := product.NewProductRepository(db)
	productService := product.NewProductService(productRepository)
	productHandler := product.NewProductHandler(productService)
	userRepository := user.NewUserRepository(db)
	userService := user.NewUserService(userRepository)
	userHandler := user.NewUserHandler(userService)
	client, err := config.InitES(configConfig)
	if err != nil {
		return nil, err
	}
	searchRepository := search.NewSearchRepository(client)
	searchService := search.NewSearchService(searchRepository)
	searchHandler := search.NewSearchHandler(searchService)
	appApp := &app.App{
		ProductHandler: productHandler,
		UserHandler:    userHandler,
		SearchHandler:  searchHandler,
		Config:         configConfig,
	}
	return appApp, nil
}
